Running deterministic tests: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
Test 1 starting
Test 1 passed
Test 2 starting
Test 2 passed
Test 3 starting
Test 3 passed
Test 4 starting
Test 4 passed
Test 5 starting
Test 5 passed
Test 6 starting
Test 6 passed
Test 7 starting
Test 7 passed
Test 8 starting
Test 8 passed
Test 9 starting
Test 9 passed
Test 10 starting
Test 10 passed
Test 11 starting
Test 11 passed
Test 12 starting
Test 12 passed
Test 13 starting
Test 13 passed
Test 14 starting
Test 14 passed
Test 15 starting
Test 15 passed
Test 16 starting
Test 16 passed
Test 17 starting
Test 17 passed
Test 18 starting
Test 18 passed
Test 19 starting
Test 19 passed
Test 20 starting
Test 20 passed
Test 21 starting
Test 21 passed
Test 22 starting
Test 22 passed
All deterministic tests passed
Running hoppl-deterministic tests: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Test 1 starting
Test 1 passed
Test 2 starting
Test 2 passed
Test 3 starting
Test 3 passed
Test 4 starting
Test 4 passed
Test 5 starting
Test 5 passed
Test 6 starting
Test 6 passed
Test 7 starting
Test 7 passed
Test 8 starting
Test 8 passed
Test 9 starting
Test 9 passed
Test 10 starting
Test 10 passed
Test 11 starting
Test 11 passed
Test 12 starting
Test 12 passed
All hoppl-deterministic tests passed
Running probabilistic tests: [1, 2, 3, 4, 5, 6, 7, 8]
Test 1 starting
Test truth: ('normal', 5, 1.4142136)
Truth: ('normal', 5, 1.4142136)
p value: 0.4045246282956865
Test 1 passed
Test 2 starting
Test truth: ('beta', 2.0, 5.0)
Truth: ('beta', 2.0, 5.0)
p value: 0.6239949009440715
Test 2 passed
Test 3 starting
Test truth: ('exponential', 0.0, 5.0)
Truth: ('exponential', 0.0, 5.0)
p value: 0.01688347643117229
Test 3 passed
Test 4 starting
Test truth: ('normal', 5.3, 3.2)
Truth: ('normal', 5.3, 3.2)
p value: 0.06774800210654774
Test 4 passed
Test 5 starting
Test truth: ('normalmix', 0.1, -1, 0.3, 0.9, 1, 0.3)
Truth: ('normalmix', 0.1, -1, 0.3, 0.9, 1, 0.3)
p value: 0.963138609609006
Test 5 passed
Test 6 starting
Test truth: ('normal', 0, 1.44)
Truth: ('normal', 0, 1.44)
p value: 0.8747819710311844
Test 6 passed
Test 7 starting
Test truth: ('normal', 0, 1.4142136)
Truth: ('normal', 0, 1.4142136)
p value: 0.6046625926233915
Test 7 passed
Test 8 starting
Test truth: ('normal', 0, 1)
Truth: ('normal', 0, 1)
p value: 0.9552691536951589
Test 8 passed
All probabilistic tests passed
Running: homework_6: 1
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 4294
Effective sample size: tensor(4294.)
Fractional sample size: tensor(1.)
Sum of weights: tensor(1.0000, dtype=torch.float64)
Samples shape: torch.Size([4294])
First sample: tensor(50.)
Sample mean: tensor(100.3572)
Sample standard deviation: tensor(99.2111)
Time taken [s]: 60.423078775405884
Number of samples: 4294
Finished program 1
Running: homework_6: 2
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 10000
Effective sample size: tensor(77.2220)
Fractional sample size: tensor(0.0077)
Sum of weights: tensor(1., dtype=torch.float64)
Samples shape: torch.Size([10000])
First sample: tensor(6.1574)
Sample mean: tensor(7.2890)
Sample standard deviation: tensor(1.0014)
Time taken [s]: 16.400496006011963
Number of samples: 10000
Finished program 2
Running: homework_6: 3
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 4033
Effective sample size: tensor(3312.7417)
Fractional sample size: tensor(0.8214)
Sum of weights: tensor(1.0000, dtype=torch.float64)
Samples shape: torch.Size([4033, 17])
First sample: tensor([0., 2., 1., 0., 2., 2., 0., 2., 0., 0., 1., 2., 0., 2., 2., 1., 1.])
Sample mean: tensor([1.4297, 1.5475, 1.4771, 1.4795, 1.4952, 1.4495, 1.4771, 1.4704, 1.4565,
        1.4845, 1.4560, 1.4848, 1.4860, 1.4446, 1.4562, 1.3980, 1.0057])
Sample standard deviation: tensor([0.8718, 0.6896, 0.7444, 0.7408, 0.7387, 0.7625, 0.7454, 0.7438, 0.7661,
        0.7274, 0.7540, 0.7482, 0.7298, 0.7753, 0.7593, 0.7374, 0.8142])
[34m[1mwandb[39m[22m: [33mWARNING[39m wandb.plots.* functions are deprecated and will be removed in a future release. Please use wandb.plot.* instead.
[34m[1mwandb[39m[22m: Visualizing heatmap.
Time taken [s]: 61.2111029624939
Number of samples: 4033
Finished program 3