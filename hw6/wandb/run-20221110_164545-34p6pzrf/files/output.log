Running deterministic tests: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]
Test 1 starting
Test 1 passed
Test 2 starting
Test 2 passed
Test 3 starting
Test 3 passed
Test 4 starting
Test 4 passed
Test 5 starting
Test 5 passed
Test 6 starting
Test 6 passed
Test 7 starting
Test 7 passed
Test 8 starting
Test 8 passed
Test 9 starting
Test 9 passed
Test 10 starting
Test 10 passed
Test 11 starting
Test 11 passed
Test 12 starting
Test 12 passed
Test 13 starting
Test 13 passed
Test 14 starting
Test 14 passed
Test 15 starting
Test 15 passed
Test 16 starting
Test 16 passed
Test 17 starting
Test 17 passed
Test 18 starting
Test 18 passed
Test 19 starting
Test 19 passed
Test 20 starting
Test 20 passed
Test 21 starting
Test 21 passed
Test 22 starting
Test 22 passed
All deterministic tests passed
Running hoppl-deterministic tests: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
Test 1 starting
Test 1 passed
Test 2 starting
Test 2 passed
Test 3 starting
Test 3 passed
Test 4 starting
Test 4 passed
Test 5 starting
Test 5 passed
Test 6 starting
Test 6 passed
Test 7 starting
Test 7 passed
Test 8 starting
Test 8 passed
Test 9 starting
Test 9 passed
Test 10 starting
Test 10 passed
Test 11 starting
Test 11 passed
Test 12 starting
Test 12 passed
All hoppl-deterministic tests passed
Running probabilistic tests: [1, 2, 3, 4, 5, 6, 7, 8]
Test 1 starting
Test truth: ('normal', 5, 1.4142136)
Truth: ('normal', 5, 1.4142136)
p value: 0.1272342764860347
Test 1 passed
Test 2 starting
Test truth: ('beta', 2.0, 5.0)
Truth: ('beta', 2.0, 5.0)
p value: 0.9696663959385214
Test 2 passed
Test 3 starting
Test truth: ('exponential', 0.0, 5.0)
Truth: ('exponential', 0.0, 5.0)
p value: 0.9831843697968127
Test 3 passed
Test 4 starting
Test truth: ('normal', 5.3, 3.2)
Truth: ('normal', 5.3, 3.2)
p value: 0.16753097530287875
Test 4 passed
Test 5 starting
Test truth: ('normalmix', 0.1, -1, 0.3, 0.9, 1, 0.3)
Truth: ('normalmix', 0.1, -1, 0.3, 0.9, 1, 0.3)
p value: 0.7624399862006135
Test 5 passed
Test 6 starting
Test truth: ('normal', 0, 1.44)
Truth: ('normal', 0, 1.44)
p value: 0.8071395994756992
Test 6 passed
Test 7 starting
Test truth: ('normal', 0, 1.4142136)
Truth: ('normal', 0, 1.4142136)
p value: 0.2603959822249692
Test 7 passed
Test 8 starting
Test truth: ('normal', 0, 1)
Truth: ('normal', 0, 1)
p value: 0.05099911088075959
Test 8 passed
All probabilistic tests passed
Running: homework_6: 1
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 9129
Effective sample size: tensor(9129.)
Fractional sample size: tensor(1.)
Sum of weights: tensor(1.0000, dtype=torch.float64)
Samples shape: torch.Size([9129])
First sample: tensor(62.)
Sample mean: tensor(100.4361)
Sample standard deviation: tensor(101.3374)
Time taken [s]: 60.56939697265625
Number of samples: 9129
Finished program 1
Running: homework_6: 2
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 10000
Effective sample size: tensor(169.8466)
Fractional sample size: tensor(0.0170)
Sum of weights: tensor(1., dtype=torch.float64)
Samples shape: torch.Size([10000])
First sample: tensor(4.3240)
Sample mean: tensor(6.6257)
Sample standard deviation: tensor(1.0983)
Time taken [s]: 7.255730867385864
Number of samples: 10000
Finished program 2
Running: homework_6: 3
Inference method: IS
Maximum samples [log10]: 4.0
Maximum time [s]: 60
Sample size: 10000
Effective sample size: tensor(8182.1162)
Fractional sample size: tensor(0.8182)
Sum of weights: tensor(1., dtype=torch.float64)
Samples shape: torch.Size([10000, 17])
First sample: tensor([0., 2., 1., 0., 1., 2., 2., 2., 1., 0., 1., 1., 2., 2., 0., 2., 2.])
Sample mean: tensor([1.3937, 1.5568, 1.4699, 1.4727, 1.4747, 1.4648, 1.4763, 1.5009, 1.4879,
        1.4708, 1.4855, 1.4796, 1.4963, 1.5008, 1.4698, 1.4229, 0.9891])
Sample standard deviation: tensor([0.8916, 0.6914, 0.7585, 0.7468, 0.7443, 0.7507, 0.7460, 0.7368, 0.7390,
        0.7522, 0.7407, 0.7468, 0.7399, 0.7275, 0.7478, 0.7380, 0.8195])
[34m[1mwandb[39m[22m: [33mWARNING[39m wandb.plots.* functions are deprecated and will be removed in a future release. Please use wandb.plot.* instead.
[34m[1mwandb[39m[22m: Visualizing heatmap.
Time taken [s]: 57.88721704483032
Number of samples: 10000
Finished program 3