Running deterministic tests
Test 1 starting
Evaluation scheme: desugar
Test 1 passed
Test 2 starting
Evaluation scheme: desugar
Test 2 passed
Test 3 starting
Evaluation scheme: desugar
Test 3 passed
Test 4 starting
Evaluation scheme: desugar
Test 4 passed
Test 5 starting
Evaluation scheme: desugar
Test 5 passed
Test 6 starting
Evaluation scheme: desugar
Test 6 passed
Test 7 starting
Evaluation scheme: desugar
Test 7 passed
Test 8 starting
Evaluation scheme: desugar
Test 8 passed
Test 9 starting
Evaluation scheme: desugar
Test 9 passed
Test 10 starting
Evaluation scheme: desugar
Test 10 passed
Test 11 starting
Evaluation scheme: desugar
Test 11 passed
Test 12 starting
Evaluation scheme: desugar
Test 12 passed
Test 13 starting
Evaluation scheme: desugar
Test 13 passed
Test 14 starting
Evaluation scheme: desugar
Test 14 passed
Test 15 starting
Evaluation scheme: desugar
Test 15 passed
Test 16 starting
Evaluation scheme: desugar
Test 16 passed
Test 17 starting
Evaluation scheme: desugar
Test 17 passed
Test 18 starting
Evaluation scheme: desugar
Test 18 passed
Test 19 starting
Evaluation scheme: desugar
Test 19 passed
Test 20 starting
Evaluation scheme: desugar
Test 20 passed
Test 21 starting
Evaluation scheme: desugar
Test 21 passed
All deterministic tests passed
Running probabilistic tests
Test 1 starting
Evaluation scheme: desugar
Truth: ('normal', 5, 1.4142136)
p value: 0.8965298592843861
Test 1 passed
Test 2 starting
Evaluation scheme: desugar
Truth: ('beta', 2.0, 5.0)
p value: 0.2346450364957975
Test 2 passed
Test 3 starting
Evaluation scheme: desugar
Truth: ('exponential', 0.0, 5.0)
p value: 0.957576284382376
Test 3 passed
Test 4 starting
Evaluation scheme: desugar
Truth: ('normal', 5.3, 3.2)
p value: 0.32706040600173647
Test 4 passed
Test 5 starting
Evaluation scheme: desugar
Truth: ('normalmix', 0.1, -1, 0.3, 0.9, 1, 0.3)
p value: 0.20490679662524258
Test 5 passed
Test 6 starting
Evaluation scheme: desugar
Truth: ('normal', 0, 1.44)
p value: 0.29617024688175986
Test 6 passed
Test 7 starting
Evaluation scheme: desugar
Truth: ('normal', 0, 1.4142136)
p value: 0.6287476419798181
Test 7 passed
Test 8 starting
Evaluation scheme: desugar
/Users/elvis/Desktop/School/2022/cpsc_536/CPSC532W_hw2/evaluation_based_sampling.py:39: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  sigma+= tc.tensor(logp)
Truth: ('normal', 0, 1)
p value: 0.7067449408179007
Test 8 passed
All probabilistic tests passed
Running: HW2: 1
Maximum samples [log10]: 3.0
Maximum time [s]: None
Evaluation scheme: desugar
Samples shape: torch.Size([1000])
First sample: tensor(3.8359)
Sample mean: tensor(1.0268)
Sample standard deviation: tensor(2.2848)
Time taken [s]: 0.6995139122009277
Number of samples: 1000
Finished program 1
Running: HW2: 2
Maximum samples [log10]: 3.0
Maximum time [s]: None
Evaluation scheme: desugar
Samples shape: torch.Size([1000, 2])
First sample: tensor([-11.8352,  -7.6550])
Sample mean: tensor([-0.2052, -0.6976])
Sample standard deviation: tensor([ 9.9464, 10.3259])
[34m[1mwandb[39m[22m: [33mWARNING[39m wandb.plots.* functions are deprecated and will be removed in a future release. Please use wandb.plot.* instead.
Time taken [s]: 1.304847002029419
Number of samples: 1000
Finished program 2
Running: HW2: 3
Maximum samples [log10]: 3.0
Maximum time [s]: None
Evaluation scheme: desugar
Samples shape: torch.Size([1000, 17])
First sample: tensor([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 0., 1., 2., 2.])
Sample mean: tensor([1.0120, 1.4370, 1.4740, 1.4700, 1.4600, 1.4600, 1.4980, 1.5080, 1.5170,
        1.4570, 1.4690, 1.4680, 1.4840, 1.5090, 1.4740, 1.4610, 1.5060])
Sample standard deviation: tensor([0.8213, 0.7325, 0.7429, 0.7587, 0.7516, 0.7556, 0.7311, 0.7283, 0.7364,
        0.7568, 0.7534, 0.7547, 0.7445, 0.7352, 0.7668, 0.7544, 0.7338])
[34m[1mwandb[39m[22m: Visualizing heatmap.
/Users/elvis/Desktop/School/2022/cpsc_536/CPSC532W_hw2/evaluation_based_sampling.py:39: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  sigma+= tc.tensor(logp)
Time taken [s]: 6.654901027679443
Number of samples: 1000
Finished program 3
Running: HW2: 4
Maximum samples [log10]: 3.0
Maximum time [s]: None
Evaluation scheme: desugar
Samples shape: torch.Size([1000, 130])
First sample: tensor([-0.0106, -0.7453,  0.6904,  1.6420,  2.2905, -0.3780,  0.0990,  0.5885,
         0.4670,  0.9556, -1.0761,  0.1774,  0.8382, -0.2309,  1.5749,  1.6872,
         0.0639, -0.6255,  0.7578, -0.6655, -1.6560,  1.3034, -0.6881, -0.3910,
        -0.0700,  0.9395, -0.9458,  0.9119,  1.3489,  0.4576,  0.1754,  1.8963,
         1.1032, -0.6371, -0.1141,  0.2050,  0.8618, -0.9073,  0.4129,  0.0715,
        -0.1043,  0.2716, -0.6792,  1.5204,  1.5127,  1.4020,  0.7375,  0.4142,
        -0.3095,  0.1874, -0.9086,  0.4172, -0.7006, -0.3894, -0.2964, -0.1614,
         0.4795, -1.0236, -1.2556,  0.6639, -0.4755, -2.3173,  0.5463, -0.7830,
        -1.7379,  0.0533,  0.2683,  0.1294, -0.5194,  1.0782, -0.7517, -1.5921,
         0.2135,  0.8719, -1.0764,  0.4149, -0.5491, -0.6462, -1.3999, -0.0794,
        -0.7096, -1.7739, -0.9587, -0.3938, -1.7158, -0.0606, -0.8951, -0.2559,
        -1.3513, -1.3751, -0.4618, -0.5480,  0.6147,  0.5296, -0.3955,  0.9143,
        -0.0029,  2.2017,  1.1102,  0.8386, -1.6544,  0.2242, -0.5182,  1.8681,
        -0.7691, -1.2800, -0.2933, -0.9260,  0.6466,  1.4237, -1.0986, -0.9354,
         0.7998,  1.2901, -1.7468,  0.0043, -1.3008,  1.3193, -1.6651,  0.6896,
        -0.1253, -0.4739, -0.8151, -0.7413, -0.0614,  0.4781, -0.4928,  1.0062,
         0.2899,  0.8548])
Sample mean: tensor([-2.1824e-02,  5.5024e-02, -1.7359e-02, -4.9942e-02,  4.8127e-03,
        -2.6918e-02, -7.8702e-02,  3.7121e-02,  1.1453e-02, -1.4068e-02,
         1.3280e-02, -2.0710e-02, -4.4529e-02, -1.3475e-02, -9.5496e-02,
        -2.2582e-02,  8.7590e-03,  1.7638e-02,  4.4803e-02,  2.8206e-02,
         1.1548e-02, -5.1943e-02, -5.0669e-02,  5.7015e-02,  7.3355e-02,
         7.2957e-02, -3.6740e-02,  3.2187e-02,  1.3975e-02, -1.4826e-02,
         3.8147e-02,  4.3583e-02,  4.9041e-02, -6.4880e-02,  1.3435e-02,
         7.7598e-02, -2.7949e-03, -1.5840e-02,  1.8075e-02,  1.9959e-02,
        -1.0224e-02, -4.2888e-02, -2.4258e-02, -2.1468e-02,  1.0194e-02,
         3.1033e-02, -1.1753e-01,  5.3430e-02, -2.5585e-02,  3.4731e-04,
        -1.3306e-02, -4.5309e-03,  4.6625e-02,  2.6622e-03,  3.6413e-02,
         1.1117e-02,  2.5738e-03, -2.2600e-02,  2.1218e-02,  3.1884e-02,
        -4.4475e-02, -2.4331e-02, -1.2519e-02,  2.3957e-02, -3.7732e-02,
         2.0373e-02,  1.8082e-02,  7.3217e-02, -6.0648e-02, -6.0571e-02,
         3.5141e-02,  4.0045e-02,  1.3004e-02,  1.4965e-02, -2.6282e-02,
         2.9939e-02, -2.4385e-02, -2.4842e-02,  4.7754e-02, -5.6523e-02,
         3.0101e-02, -1.1084e-03, -3.3342e-02,  2.8995e-02,  1.0152e-02,
         6.1697e-03, -1.5372e-02,  2.2621e-03,  2.4839e-02,  8.9802e-03,
         3.6645e-02,  4.6733e-02, -3.6136e-02,  3.7402e-02, -3.0319e-02,
        -2.3499e-02, -7.6770e-03,  2.8130e-02, -3.6356e-02,  2.0200e-02,
        -4.3916e-02, -4.1618e-02, -5.8241e-03,  1.5888e-02, -1.7584e-02,
        -6.1368e-02,  1.7122e-02,  8.6940e-05,  4.8557e-03,  2.8888e-02,
         2.8904e-02, -3.6011e-02,  2.5755e-02,  5.2993e-03, -6.1580e-03,
         9.4334e-02, -2.4697e-02,  4.9595e-02,  3.4304e-02,  3.0325e-02,
        -3.5506e-02, -1.1169e-02, -3.1323e-02,  2.7174e-05,  1.0151e-01,
         3.4489e-02,  1.9885e-02, -3.6808e-02,  1.8721e-02,  1.2418e-02])
Sample standard deviation: tensor([0.9801, 1.0358, 1.0044, 1.0226, 0.9918, 0.9684, 1.0012, 0.9956, 1.0251,
        1.0313, 1.0125, 0.9911, 1.0188, 0.9668, 1.0314, 0.9904, 1.0111, 0.9961,
        0.9863, 1.0206, 0.9990, 1.0214, 1.0038, 1.0110, 0.9991, 1.0059, 1.0015,
        1.0230, 0.9971, 1.0395, 1.0232, 1.0185, 0.9945, 0.9735, 0.9765, 0.9990,
        1.0112, 0.9862, 1.0331, 1.0036, 1.0110, 1.0257, 0.9642, 1.0066, 1.0586,
        1.0202, 1.0130, 0.9658, 0.9939, 1.0054, 1.0004, 1.0082, 0.9932, 0.9892,
        1.0219, 1.0008, 0.9786, 0.9756, 1.0124, 1.0214, 1.0366, 0.9840, 1.0262,
        1.0111, 1.0235, 0.9725, 0.9928, 0.9690, 1.0102, 0.9786, 1.0033, 0.9708,
        0.9932, 0.9760, 0.9884, 0.9969, 0.9462, 0.9805, 0.9577, 1.0088, 0.9687,
        0.9704, 0.9878, 0.9934, 1.0059, 0.9802, 1.0246, 0.9803, 0.9954, 1.0177,
        1.0156, 0.9925, 1.0063, 1.0356, 0.9945, 0.9783, 1.0029, 1.0090, 1.0026,
        0.9781, 0.9821, 0.9710, 1.0369, 1.0410, 1.0221, 0.9649, 0.9813, 1.0435,
        0.9874, 0.9970, 0.9976, 1.0130, 1.0115, 0.9733, 0.9944, 0.9913, 1.0011,
        0.9888, 1.0227, 1.0083, 1.0074, 0.9746, 1.0070, 0.9761, 0.9798, 0.9911,
        0.9908, 1.0404, 1.0177, 0.9730])
Time taken [s]: 11.088890075683594
Number of samples: 1000
Finished program 4